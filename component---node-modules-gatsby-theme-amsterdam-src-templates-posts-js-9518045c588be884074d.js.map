{"version":3,"sources":["webpack:///../src/index.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/templates/posts.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/components/BasicGrid.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/components/ListGrid.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/components/PostList.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/components/Intro.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/components/Button.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/icons/SelectIcon.js","webpack:///./node_modules/gatsby-theme-amsterdam/src/components/Pagination.js"],"names":["BackgroundSlider","callbacks","images","duration","transition","initDelay","query","children","gatsbyImageProps","nodes","bgRefs","subRefs","bgWrappers","subWrappers","style","imageProps","data","this","backgrounds","find","node","imgs","map","backgroundStyle","top","index","subStyle","React","key","ref","fluid","useState","timeoutHandle","setTimeoutHandle","timeoutHandleRef","useRef","setIndex","indexRef","getCount","bgRef","subRef","length","callback","prevIndex","setTimeout","newIndex","postsQuery","PostsPage","ogImage","pageContext","intro","useSiteMetadata","posts","allPost","edges","cover","childImageSharp","ogimg","src","error","SEO","image","title","startCase","basePath","Container","fullWidth","noPadding","Intro","text","context","PostList","_","require","List","props","theme","sizes","maxWidth","Cover","Img","Item","responsive","small","colors","tertiary","highlight","Title","fonts","boldWeight","Excerpt","secondary","Divider","border","Date","Tag","BasicGrid","post","to","slug","aspectRatio","alt","Placeholder","excerpt","date","tags","tag","kebabCase","base","ImageContainer","TextContainer","AdditionalContainer","ListGrid","useContext","OptionsContext","grid","Wrapper","capitalize","medium","humanPageNumber","Link","button","Button","SVG","SelectIcon","viewBox","d","Numbers","Select","Pagination","numberOfPages","value","onChange","e","navigate","target","paginationPath","Array","from","i","previousPagePath","nextPagePath","order"],"mappings":"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","file":"component---node-modules-gatsby-theme-amsterdam-src-templates-posts-js-9518045c588be884074d.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Img from \"gatsby-image\"\r\n\r\n/**\r\n * @param {object} props Component props\r\n * @param {object} props.callbacks interface for callback functions (pass this to Pagination, if used)\r\n * @param {(newIndex:number) => void} props.callbacks.atIndex sets background to specified index\r\n * @param {(prevIndex: number, newIndex: number) => void} props.callbacks.onChange user-provided callback fired when background image changes\r\n * @param {Function} props.callbacks.next sets background to the next one\r\n * @param {Function} props.callbacks.prev sets background to the previous one \r\n * @param {string[]} props.images list of specified image file names to set order\r\n * @param {number} [props.duration=5] duration background is shown for\r\n * @param {number} [props.transition=2] length of transition\r\n * @param {object.isRequired} props.query result of GraphQL query for images\r\n * @param {JSXElement[]} props.children subtitles/captions in sync for respective background images;\r\n * (<React.Fragment/> to skip over one)\r\n * @param {Array} props.gatsbyImageProps remaining props spread onto Img elements\r\n * @param {number} [props.initDelay=5] initial delay before first transition\r\n */\r\nconst BackgroundSlider = ({callbacks, images, duration, transition, initDelay, query, children, ...gatsbyImageProps}) => {\t\r\n\tlet nodes = [];\r\n\tlet bgRefs = [];\r\n\tlet subRefs = [];\t\r\n\tlet bgWrappers = [];\r\n\tlet subWrappers = [];\r\n\tconst {style, ...imageProps} = gatsbyImageProps;    \r\n\r\n\tnodes.safePush = function(data){\r\n\t\tif(data){\r\n\t\t\treturn this.push(data);\r\n\t\t}else{\r\n\t\t\treturn this.length;\r\n\t\t}\r\n\t}\r\n\t\r\n\tif(images){\r\n\t\tfor(let image of images){\r\n\t\t\tnodes.safePush(\r\n\t\t\t\tquery.backgrounds.nodes.find(\r\n\t\t\t\t\tnode => node.relativePath === image\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t}\r\n\t}else{\r\n\t\tnodes = query.backgrounds.nodes;\r\n\t}\r\n\t\r\n\tconst imgs = nodes.map(\r\n\t\t(data, index)=>{\t\t\t\r\n\t\t\tconst backgroundStyle = {\r\n\t\t\t\tposition:\"absolute\", \r\n\t\t\t\tzIndex: -10,\r\n\t\t\t\twidth:\"100%\", \r\n\t\t\t\theight: \"100%\", \r\n\t\t\t\tmargin:0, \r\n\t\t\t\tpadding:\"none\", \r\n\t\t\t\tleft:0, top:0, \r\n\t\t\t\tbackgroundSize:\"cover\", \r\n\t\t\t\topacity: index ? 0 : 1, \r\n\t\t\t\ttransition: `opacity ${transition}s`\r\n\t\t\t};\r\n\r\n\t\t\tconst subStyle = {\r\n\t\t\t\topacity: index ? 0 : 1, \r\n\t\t\t\ttransition: `opacity ${transition}s`, \r\n\t\t\t\tpointerEvents: index ? \"none\" : \"auto\"\r\n\t\t\t}\r\n\r\n\t\t\tsubRefs[index] = React.createRef();\r\n\t\t\tbgRefs[index] = React.createRef();\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<React.Fragment key={index}>\r\n\t\t\t\t\t<div ref={bgRefs[index]}><Img fluid={data.childImageSharp.fluid} style={{...backgroundStyle, ...style}} {...imageProps}/></div>\r\n\t\t\t\t\t<div ref={subRefs[index]} style={subStyle}>{React.Children.toArray(children)[index]}</div>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t\t} \r\n\t);\r\n    \r\n    const [timeoutHandle, setTimeoutHandle] = useState(0);\r\n    const timeoutHandleRef = useRef(timeoutHandle);\r\n    timeoutHandleRef.current = timeoutHandle;\r\n    const [index, setIndex] = useState(0);\r\n    const indexRef = useRef(index);\r\n\tindexRef.current = index;\r\n\t\r\n\tif (callbacks) callbacks.getCount = () => imgs.length;\r\n\r\n\tconst initEffect = () => {\r\n\t\tbgRefs.forEach((bgRef) => {\r\n\t\t\tbgWrappers.push(bgRef.current.firstElementChild);\t\t\t\r\n\t\t});\r\n\r\n\t\tsubRefs.forEach((subRef) =>{\r\n\t\t\tsubWrappers.push(subRef.current);\r\n\t\t})\r\n\t\t\r\n        const length = bgWrappers.length;\r\n\t\tconst callback = function(){     \r\n            const index = indexRef.current;\r\n\t\t\t\r\n\t\t\tbgWrappers[index].style.opacity = 0;\r\n\t\t\tbgWrappers[(index + 1) % length].style.opacity = 1;\r\n\r\n\t\t\tsubWrappers[index].style.opacity = 0;\r\n\t\t\tsubWrappers[index].style.pointerEvents = \"none\";\r\n\t\t\t\r\n\t\t\tsubWrappers[(index + 1) % length].style.opacity = 1;\r\n\t\t\tsubWrappers[(index + 1) % length].style.pointerEvents = \"auto\";\t\t\t\t\t\r\n\t\t\t\r\n\t\t\tif(callbacks && callbacks.onChange) \r\n\t\t\t{\r\n\t\t\t\tcallbacks.onChange(index, (index + 1) % length);\r\n\t\t\t}\r\n            setIndex(prevIndex => (prevIndex + 1) % length);\r\n            setTimeoutHandle(setTimeout(callback, duration * 1000));\r\n\t\t}\r\n\r\n        setTimeoutHandle(setTimeout(callback, initDelay * 1000));\r\n \r\n        if (callbacks){     \r\n            callbacks.atIndex = function (newIndex) {\r\n                const index = indexRef.current;\r\n                clearTimeout(timeoutHandleRef.current);\r\n                    \r\n                bgWrappers[index].style.opacity = 0;\r\n                bgWrappers[(newIndex) % length].style.opacity = 1;\r\n        \r\n                subWrappers[index].style.opacity = 0;\r\n                subWrappers[index].style.pointerEvents = \"none\";\r\n                \r\n                subWrappers[(newIndex) % length].style.opacity = 1;\r\n                subWrappers[(newIndex) % length].style.pointerEvents = \"auto\";\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(callbacks.onChange) \r\n\t\t\t\t{\r\n\t\t\t\t\tcallbacks.onChange(index, newIndex % length);\r\n\t\t\t\t}\r\n                setIndex((newIndex) % length);\r\n                setTimeoutHandle(setTimeout(callback, duration * 1000));        \r\n            }\r\n\r\n            callbacks.next = () => callbacks.atIndex((indexRef.current + 1) % length);\r\n\t\t\tcallbacks.prev = () => callbacks.atIndex((indexRef.current + length - 1) % length);\r\n        }\r\n\t}\r\n\t \r\n\t// Runs once after DOM is loaded; effectively `componentDidMount`\t\r\n\tuseEffect(initEffect, []);\r\n\t\r\n\treturn <React.Fragment>{imgs}</React.Fragment>\t\r\n}\r\n\r\nBackgroundSlider.defaultProps = {\r\n\timages: null,\r\n\tduration: 5,\r\n\ttransition: 2,\r\n\tinitDelay: 5,\r\n}\r\n\r\nBackgroundSlider.propTypes = {\r\n\tquery: PropTypes.object.isRequired,\r\n\timages: PropTypes.arrayOf(PropTypes.string),\r\n\tduration: PropTypes.number,\r\n\ttransition: PropTypes.number,\r\n\tinitDelay: PropTypes.number,\r\n}\r\n\r\nexport default BackgroundSlider\r\n\r\nexport const Pagination = ({callbacks}) => {\r\n\tlet buttonRefs = [];\r\n\r\n\tuseEffect(()=>{\r\n\t\tcallbacks.onChange = (prevIndex, newIndex) => { \r\n\t\t\tbuttonRefs[prevIndex].current.style.color = 'silver'; \r\n\t\t\tbuttonRefs[prevIndex].current.style.transform = 'scale(1.0,1.0)'; \r\n\t\t\tbuttonRefs[newIndex].current.style.color = 'white'; \r\n\t\t\tbuttonRefs[newIndex].current.style.transform=\"scale(1.2, 1.2)\";\r\n\t\t};\t\r\n\t},[]);\r\n\r\n\treturn(\r\n\t\t<React.Fragment>\r\n\t\t\t{Array.from(Array(callbacks.getCount()).keys()).map ((index) =>\r\n\t\t\t\t<span role='button' ref={buttonRefs[index] = React.createRef()} \r\n\t\t\t\tkey={index}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tuserSelect: 'none', \r\n\t\t\t\t\tcolor: index === 0 ? 'white' : 'silver', \r\n\t\t\t\t\tfontSize: '4em', \r\n\t\t\t\t\tcursor: 'pointer', \r\n\t\t\t\t\tdisplay: 'inline-block', \r\n\t\t\t\t\ttransform: index === 0 ? 'scale(1.2,1.2)' : 'scale(1.0)'\r\n\t\t\t\t}} \r\n\t\t\t\tonClick={() => callbacks.atIndex(index)}>&middot;</span>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Intro from '../components/Intro'\nimport PostList from '../components/PostList'\nimport SEO from '../components/SEO'\nimport Pagination from '../components/Pagination'\nimport Container from '../components/Container'\nimport ImageSlider from '../components/ImageSlider'\nimport { useSiteMetadata } from '../hooks/use-site-metadata'\nimport { startCase } from 'lodash'\n\nconst PostsPage = ({ data, pageContext }) => {\n  const { intro } = useSiteMetadata()\n  const posts = data.allPost.edges\n\n  let ogImage\n  try {\n    ogImage = posts[0].node.cover.childImageSharp.ogimg.src\n  } catch (error) {\n    ogImage = null\n  }\n\n  return (\n    <>\n      <SEO image={ogImage} title={startCase(pageContext.basePath)} />\n      <Container fullWidth noPadding>\n        {intro && <Intro text={intro} context={pageContext} />}\n        {/*<ImageSlider />*/}\n        {posts.length > 0 && <PostList posts={posts} context={pageContext} />}\n      </Container>\n      <Pagination context={pageContext} />\n    </>\n  )\n}\n\nexport default PostsPage\n\nexport const postsQuery = graphql`\n  query($skip: Int!, $limit: Int!) {\n    allPost(sort: { fields: [date], order: DESC }, skip: $skip, limit: $limit) {\n      edges {\n        node {\n          slug\n          excerpt\n          title\n          tags\n          date(formatString: \"MMMM DD, YYYY\")\n          cover {\n            childImageSharp {\n              fluid(maxWidth: 1000) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n              ogimg: resize(width: 1000) {\n                src\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Img from 'gatsby-image'\nimport Placeholder from './Placeholder'\nconst _ = require(`lodash`)\n\nconst List = styled.ul`\n  margin: 3rem auto;\n  max-width: ${props => props.theme.sizes.maxWidth};\n  padding: 0 1.5rem;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n`\n\nconst Cover = styled(Img)`\n  transition: opacity 0.4s;\n  img {\n    transition: transform 0.6s !important;\n  }\n  &:hover {\n    opacity: 0.8;\n    img {\n      transform: scale(1.03);\n    }\n  }\n  @media (hover: none) {\n    opacity: 1 !important;\n    img {\n      transform: scale(1) !important;\n    }\n  }\n`\n\nconst Item = styled.li`\n  position: relative;\n  display: inline-block;\n  flex: 0 100%;\n  margin: 0 0 2rem;\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    flex: 0 49%;\n  }\n  a {\n    text-decoration: none;\n    transition: color 0.3s;\n    color: ${props => props.theme.colors.tertiary};\n    &:hover {\n      color: ${props => props.theme.colors.highlight};\n    }\n    @media (hover: none) {\n      color: ${props => props.theme.colors.tertiary} !important;\n    }\n  }\n`\n\nconst Title = styled.h2`\n  transition: color 0.3s;\n  color: ${props => props.theme.colors.text};\n  font-weight: ${props => props.theme.fonts.boldWeight};\n  margin: 1rem 0 0 0;\n  display: block;\n  line-height: 1.25;\n  font-size: 1rem;\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    font-size: 1.1rem;\n  }\n  &:hover {\n    color: ${props => props.theme.colors.highlight};\n  }\n  @media (hover: none) {\n    color: ${props => props.theme.colors.text} !important;\n  }\n`\n\nconst Excerpt = styled.p`\n  padding: 0.5rem 0 0 0;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.secondary};\n`\n\nconst Container = styled.div`\n  padding: 1rem 0 0;\n  line-height: 1.5;\n  font-size: 0.9em;\n`\n\nconst Divider = styled.span`\n  margin: 0 0.25rem;\n  color: ${props => props.theme.colors.border};\n`\n\nconst Date = styled.span`\n  display: inline-block;\n  color: ${props => props.theme.colors.tertiary};\n`\n\nconst Tag = styled.span`\n  display: inline-block;\n  margin: 0 0.5rem 0 0;\n  text-transform: capitalize;\n  a {\n    text-decoration: underline;\n    color: ${props => props.theme.colors.tertiary};\n    @media (hover: none) {\n      color: ${props => props.theme.colors.tertiary} !important;\n    }\n  }\n`\n\nconst BasicGrid = props => {\n  return (\n    <List>\n      {props.posts.map(({ node: post }) => (\n        <Item key={post.title}>\n          <Link to={post.slug}>\n            {post.cover && (\n              <Cover\n                sizes={{\n                  ...post.cover.childImageSharp.fluid,\n                  aspectRatio: 5 / 3,\n                }}\n                alt={post.cover.childImageSharp.title}\n              />\n            )}\n            {post.cover === null ? <Placeholder aspectRatio={5 / 3} /> : ''}\n          </Link>\n          <Link to={post.slug}>\n            <Title>{post.title}</Title>\n            <Excerpt>{post.excerpt}</Excerpt>\n          </Link>\n          <Container>\n            {post.date && <Date>{post.date}</Date>}\n            {post.tags && (\n              <>\n                <Divider>/</Divider>\n                {post.tags.map(tag => (\n                  <Tag key={tag}>\n                    <Link\n                      to={`${props.context.basePath}/tag/${_.kebabCase(tag)}/`}\n                    >\n                      {tag}\n                    </Link>\n                  </Tag>\n                ))}\n              </>\n            )}\n          </Container>\n        </Item>\n      ))}\n    </List>\n  )\n}\n\nexport default BasicGrid\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Img from 'gatsby-image'\nimport Placeholder from './Placeholder'\nconst _ = require(`lodash`)\n\nconst List = styled.ul`\n  margin: 3rem auto;\n  max-width: ${props => props.theme.sizes.maxWidth};\n  padding: 0 1.5rem;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  li:first-of-type {\n    border: 0;\n    padding-top: 0;\n  }\n  li:last-of-type {\n    padding-bottom: 0;\n    margin-bottom: 2rem;\n  }\n`\n\nconst Cover = styled(Img)`\n  transition: opacity 0.4s;\n  img {\n    transition: transform 0.6s !important;\n  }\n  &:hover {\n    opacity: 0.8;\n    img {\n      transform: scale(1.03);\n    }\n  }\n  @media (hover: none) {\n    opacity: 1 !important;\n    img {\n      transform: scale(1) !important;\n    }\n  }\n`\n\nconst Item = styled.li`\n  position: relative;\n  display: inline-block;\n  flex: 0 100%;\n  margin: 0 0 2rem;\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    margin: 0;\n    width: 100%;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-between;\n    padding: 2rem 0;\n    border-top: 1px solid ${props => props.theme.colors.border};\n  }\n  a {\n    text-decoration: none;\n    transition: color 0.3s;\n    color: ${props => props.theme.colors.base};\n    &:hover {\n      color: ${props => props.theme.colors.highlight};\n    }\n    @media (hover: none) {\n      color: ${props => props.theme.colors.base} !important;\n    }\n  }\n`\n\nconst Title = styled.h2`\n  font-weight: ${props => props.theme.fonts.boldWeight};\n  padding: 0.5rem 0 0 0;\n  display: block;\n  line-height: 1.25;\n  font-size: 1rem;\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    font-size: 1.1rem;\n    padding: 0;\n  }\n`\n\nconst Excerpt = styled.p`\n  padding: 0.5rem 0 0 0;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.secondary};\n`\n\nconst ImageContainer = styled.div`\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    flex: 0 34%;\n  }\n`\n\nconst TextContainer = styled.div`\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    padding: 0 0 0 2rem;\n    flex: 0 66%;\n  }\n`\n\nconst AdditionalContainer = styled.div`\n  padding: 1rem 0 0;\n  line-height: 1.5;\n  font-size: 0.9em;\n`\n\nconst Divider = styled.span`\n  margin: 0 0.25rem;\n  color: ${props => props.theme.colors.border};\n`\n\nconst Date = styled.span`\n  display: inline-block;\n  color: ${props => props.theme.colors.tertiary};\n`\n\nconst Tag = styled.span`\n  display: inline-block;\n  margin: 0 0.5rem 0 0;\n  text-transform: capitalize;\n  a {\n    text-decoration: underline;\n    color: ${props => props.theme.colors.tertiary};\n    @media (hover: none) {\n      color: ${props => props.theme.colors.tertiary} !important;\n    }\n  }\n`\n\nconst ListGrid = props => {\n  return (\n    <List>\n      {props.posts.map(({ node: post }) => (\n        <Item key={post.title}>\n          <ImageContainer>\n            <Link to={post.slug}>\n              {post.cover && (\n                <Cover\n                  sizes={{\n                    ...post.cover.childImageSharp.fluid,\n                    aspectRatio: 2 / 1,\n                  }}\n                  alt={post.cover.childImageSharp.title}\n                />\n              )}\n              {post.cover === null ? <Placeholder aspectRatio={2 / 1} /> : ''}\n            </Link>\n          </ImageContainer>\n          <TextContainer>\n            <Link to={post.slug}>\n              <Title>{post.title}</Title>\n              <Excerpt>{post.excerpt}</Excerpt>\n            </Link>\n            <AdditionalContainer>\n              {post.date && <Date>{post.date}</Date>}\n              {post.tags && (\n                <>\n                  <Divider>/</Divider>\n                  {post.tags.map(tag => (\n                    <Tag key={tag}>\n                      <Link\n                        to={`${props.context.basePath}/tag/${_.kebabCase(\n                          tag\n                        )}/`}\n                      >\n                        {tag}\n                      </Link>\n                    </Tag>\n                  ))}\n                </>\n              )}\n            </AdditionalContainer>\n          </TextContainer>\n        </Item>\n      ))}\n    </List>\n  )\n}\n\nexport default ListGrid\n","import React, { useContext } from 'react'\nimport BasicGrid from './BasicGrid'\nimport ListGrid from './ListGrid'\nimport OptionsContext from './OptionsContext'\n\nconst PostList = props => {\n  const options = useContext(OptionsContext)\n\n  if (options.grid === 'list') {\n    return <ListGrid {...props} />\n  }\n  return <BasicGrid {...props} />\n}\n\nexport default PostList\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst Wrapper = styled.div`\n  max-width: ${props => props.theme.sizes.maxWidth};\n  width: 100%;\n  margin: 3rem auto 0;\n  padding: 0 1.5rem;\n  text-transform: ${props => (props.capitalize ? 'capitalize' : 'none')};\n`\n\nconst Title = styled.h2`\n  line-height: 1.25;\n  text-align: left;\n  font-size: 2em;\n  @media screen and (min-width: ${props => props.theme.responsive.small}) {\n    font-size: 2.5em;\n  }\n  @media screen and (min-width: ${props => props.theme.responsive.medium}) {\n    max-width: 80%;\n  }\n`\n\nconst Intro = props => {\n  return (\n    <>\n      {props.context.humanPageNumber === 1 && (\n        <Wrapper {...props}>\n          <Title>{props.text}</Title>\n        </Wrapper>\n      )}\n    </>\n  )\n}\n\nexport default Intro\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\nconst Wrapper = styled(Link)`\n  background: ${props => props.theme.colors.button};\n  border: 1px solid ${props => props.theme.colors.border};\n  color: ${props => props.theme.colors.secondary};\n  padding: 0.5rem;\n  border-radius: 2px;\n  margin: 0 0 0 0.5rem;\n  cursor: pointer;\n  text-decoration: none;\n  transition: 0.3s all;\n  span {\n    transition: 0.3s all;\n    color: ${props => props.theme.colors.tertiary};\n  }\n  &:hover {\n    background: ${props => props.theme.colors.highlight};\n    border-color: ${props => props.theme.colors.highlight};\n    color: white;\n    span {\n      color: white;\n    }\n  }\n  @media (hover: none) {\n    background: ${props => props.theme.colors.button} !important;\n    color: ${props => props.theme.colors.secondary} !important;\n    border-color: ${props => props.theme.colors.border} !important;\n    span {\n      color: ${props => props.theme.colors.tertiary};\n    }\n  }\n`\n\nconst Button = props => {\n  return <Wrapper {...props}>{props.children}</Wrapper>\n}\n\nexport default Button\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst SVG = styled.svg`\n  padding: 0;\n  width: 0.6rem;\n  fill: ${props => props.theme.colors.tertiary};\n`\n\nconst SelectIcon = props => {\n  return (\n    <SVG viewBox=\"0 0 292.362 292.362\">\n      <path\n        d=\"M286.935,69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952,0-9.233,1.807-12.85,5.424\n  C1.807,72.998,0,77.279,0,82.228c0,4.948,1.807,9.229,5.424,12.847l127.907,127.907c3.621,3.617,7.902,5.428,12.85,5.428\n  s9.233-1.811,12.847-5.428L286.935,95.074c3.613-3.617,5.427-7.898,5.427-12.847C292.362,77.279,290.548,72.998,286.935,69.377z\"\n      />\n    </SVG>\n  )\n}\n\nexport default SelectIcon\n","import React from 'react'\nimport { navigate } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Button from './Button'\nimport SelectIcon from '../icons/SelectIcon'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  margin: -2.5rem auto 2.5rem;\n  max-width: ${props => props.theme.sizes.maxWidth};\n  padding: 0 1.5rem;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  align-items: baseline;\n`\n\nconst Numbers = styled.div`\n  border: 1px solid ${props => props.theme.colors.border};\n  border-radius: 2px;\n  display: inline-block;\n  float: left;\n  color: ${props => props.theme.colors.secondary};\n  padding: 0.5rem;\n  background: ${props => props.theme.colors.button};\n  position: relative;\n  transition: 0.3s all;\n  svg {\n    margin: 0 0 0 0.25rem;\n    transition: 0.3s all;\n  }\n  &:hover {\n    background: ${props => props.theme.colors.highlight};\n    border-color: ${props => props.theme.colors.highlight};\n    color: white;\n    svg {\n      fill: white;\n    }\n  }\n  @media (hover: none) {\n    background: ${props => props.theme.colors.button} !important;\n    color: ${props => props.theme.colors.secondary} !important;\n    border-color: ${props => props.theme.colors.border} !important;\n    svg {\n      fill: ${props => props.theme.colors.tertiary} !important;\n    }\n  }\n`\n\nconst Select = styled.select`\n  cursor: pointer;\n  position: absolute;\n  width: 100%;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  color: transparent;\n  option {\n    color: black;\n  }\n`\n\nconst Pagination = props => {\n  function changePage(e) {\n    navigate(\n      e.target.value\n        ? `${props.context.paginationPath}/${e.target.value}`\n        : `${props.context.paginationPath}/`\n    )\n  }\n\n  return (\n    <>\n      {props.context.numberOfPages > 1 && (\n        <Wrapper>\n          <Numbers>\n            {props.context.humanPageNumber}{' '}\n            <Select\n              value={\n                props.context.humanPageNumber === 1\n                  ? ``\n                  : props.context.humanPageNumber\n              }\n              onChange={changePage}\n            >\n              {Array.from({ length: props.context.numberOfPages }, (_, i) => (\n                <option value={`${i === 0 ? `` : i + 1}`} key={`page${i + 1}`}>\n                  {i + 1}\n                </option>\n              ))}\n            </Select>\n            / {props.context.numberOfPages} <SelectIcon />\n          </Numbers>\n          <div>\n            {props.context.previousPagePath && (\n              <Button to={`${props.context.previousPagePath}`}>\n                <span>&larr;</span> Prev\n              </Button>\n            )}\n            {props.context.nextPagePath && (\n              <Button style={{ order: 3 }} to={`${props.context.nextPagePath}`}>\n                Next <span>&rarr;</span>\n              </Button>\n            )}\n          </div>\n        </Wrapper>\n      )}\n    </>\n  )\n}\n\nexport default Pagination\n"],"sourceRoot":""}